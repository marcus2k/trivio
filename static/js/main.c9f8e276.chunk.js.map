{"version":3,"sources":["components/AppButton.js","components/AnswerChoices.js","components/QuestionDisplay.js","components/WelcomeDisplay.js","components/CompletedDisplay.js","services/opentdb.js","App.js","reportWebVitals.js","index.js"],"names":["AppButton","props","value","onClick","text","Button","size","variant","color","AnswerChoices","correct","incorrect","clickHandler","shuffledAnswers","lst","concat","sort","Math","random","console","log","shuffle","Grid","container","direction","justify","flex-wrap","align-items","map","ans","className","Number","window","decodeURIComponent","QuestionDisplay","questionData","question","correct_answer","incorrect_answers","useStyles","makeStyles","theme","fieldset","FormControl","formControl","margin","spacing","minWidth","selectEmpty","marginTop","WelcomeDisplay","classes","categories","settingsHandler","difficultyHandler","settings","style","fontFamily","component","FormLabel","RadioGroup","id","defaultValue","difficulty","row","aria-label","name","Children","onChange","FormControlLabel","control","Radio","label","InputLabel","Select","category","labelId","MenuItem","c","numQuestions","CompletedDisplay","answers","b","reduce","a","length","customUrl","url","amount","setCategory","setDifficulty","setUrl","axios","get","then","res","data","results","trivia_categories","INITIAL_ANSWERS","Uint8Array","App","useState","currNumber","setNumber","questions","setQuestion","setCategories","setQuizSettings","setAnswers","useEffect","axiosServices","event","preventDefault","updatedAnswers","currentTarget","updatedSettings","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c9f8e276.chunk.js","sourcesContent":["import React from 'react';\nimport { Button } from '@material-ui/core';\n\nconst AppButton = (props) => {\n    const { value, onClick, text } = props;\n    return(\n        <Button \n            size=\"large\" \n            variant=\"contained\" \n            color=\"secondary\"\n            onClick={onClick}\n            value={value}\n        >\n        {text}\n        </Button>\n    );\n};\n\nexport default AppButton;","import React from 'react';\nimport AppButton from './AppButton';\nimport { Grid } from '@material-ui/core';\nimport './assets/css/AnswerChoices.css';\n\nconst shuffle = (incorrect, correct) => {\n    const lst = incorrect.concat(correct).sort(() => Math.random() - 0.5);\n    console.log(lst);\n    return lst;\n}\n\nconst AnswerChoices = (props) => {\n    const { correct, incorrect, clickHandler } = props;\n    const shuffledAnswers = shuffle(incorrect, correct);\n    return (\n        <Grid\n        container\n        direction=\"row\"\n        justify=\"space-around\"\n        flex-wrap=\"wrap\"\n        align-items=\"stretch\"\n        >\n            {shuffledAnswers.map(ans => \n                <div key={ans} className=\"choice\">\n                    <AppButton\n                        onClick={clickHandler}\n                        value={Number(correct===ans)}\n                        text={window.decodeURIComponent(ans)}\n                    />\n                </div>\n            )}\n        </Grid>\n    )\n}\n\nexport default AnswerChoices;","import React from 'react';\nimport AnswerChoices from './AnswerChoices';\n\nconst QuestionDisplay = (props) => {\n    const { questionData, clickHandler } = props;\n\n    return (\n        <>\n            <h1>{window.decodeURIComponent(questionData.question)}</h1>\n            <AnswerChoices\n            correct={questionData.correct_answer}\n            incorrect={questionData.incorrect_answers}\n            clickHandler={clickHandler}\n            />\n        </>\n    )\n}\n\nexport default QuestionDisplay;","import React, { Children } from 'react';\nimport AppButton from './AppButton';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { FormControl, FormLabel, FormControlLabel, RadioGroup, Radio, Select, InputLabel, MenuItem } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    props: {\n      fieldset: {\n        FormControl: 'secondary',\n      }\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 240//120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n}));\n\nconst WelcomeDisplay = (props) => {\n    const classes = useStyles();\n    const { clickHandler, categories, settingsHandler, difficultyHandler, settings } = props;\n\n    return (\n        <>\n            <h1>\n                Welcome to <br /> \n                    <span style={{fontFamily:\"monospace\"}}>\n                        TrivIO!\n                    </span>\n            </h1>\n            <AppButton\n            onClick={clickHandler}\n            value={0}\n            text=\"Take a Trivia Quiz\"\n            />\n            <h6>You may optionally customize any of the following!</h6>\n            <FormControl component=\"fieldset\">\n                <FormLabel component=\"legend\">Difficulty</FormLabel>\n                <RadioGroup \n                id=\"difficulty\" \n                defaultValue={settings.difficulty || \"any\"} \n                row aria-label=\"difficulty\" \n                name=\"difficulty\" \n                value={Children.value} \n                onChange={difficultyHandler}\n                >\n                    <FormControlLabel value=\"any\" control={<Radio />} label=\"Mixed\" />\n                    <FormControlLabel value=\"easy\" control={<Radio />} label=\"Easy\" />\n                    <FormControlLabel value=\"medium\" control={<Radio />} label=\"Medium\" />\n                    <FormControlLabel value=\"hard\" control={<Radio />} label=\"Hard\" />\n                </RadioGroup>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n                <InputLabel id=\"category-label\">Category</InputLabel>\n                <Select\n                  defaultValue={settings.category || -1} // any category\n                  labelId=\"demo-simple-select-label\"\n                  id=\"category\"\n                  value={Children.value}\n                  onChange={settingsHandler}\n                  name=\"category\"\n                >\n                  <MenuItem value={-1}>Mixed</MenuItem>\n                  {categories.map(c => <MenuItem key={c.id} value={c.id}>{c.name}</MenuItem>)}\n                </Select>\n            </FormControl>\n            <FormControl className={classes.formControl}>\n              <InputLabel id=\"demo-simple-select-label\"># of Questions</InputLabel>\n              <Select\n                defaultValue={settings.numQuestions || 10}\n                labelId=\"demo-simple-select-label\"\n                id=\"numQuestions\"\n                value={Children.value}\n                onChange={settingsHandler}\n                name=\"numQuestions\"\n              >\n                <MenuItem value={5}>5</MenuItem>\n                <MenuItem value={10}>10</MenuItem>\n                <MenuItem value={15}>15</MenuItem>\n                <MenuItem value={20}>20</MenuItem>\n              </Select>\n            </FormControl>\n        </>\n    );\n}\n\nexport default WelcomeDisplay;","import React from 'react';\nimport AppButton from './AppButton';\n\nconst CompletedDisplay = (props) => {\n    const { answers, clickHandler } = props;\n    return (\n        <>\n          <header className=\"App-header\">\n            <h1>\n              Completed<br />\n              You scored {answers.map(b => b ? 1 : 0).reduce((a, b) => a + b, 0)} out of {answers.length - 2}!\n            </h1>\n            <AppButton\n            onClick={clickHandler}\n            value={0}\n            text=\"Return to Home\"\n            />\n          </header>\n        </>\n)};\n\nexport default CompletedDisplay;","import axios from 'axios';\n\nconst url = 'https://opentdb.com/api.php?type=multiple&encode=url3986'\n\nconst setCategory = (category) => category === -1 ? '' : `category=${category}`;\n\nconst setDifficulty = (difficulty) => difficulty === \"any\" ? '' : `difficulty=${difficulty}`;\n\nconst setUrl = (url, amount, category, difficulty) => \n    url + `&amount=${amount}&${setCategory(category)}&${setDifficulty(difficulty)}`;\n\nconst categoriesUrl = \"https://opentdb.com/api_category.php\";\n\nconst getRandomQuestions = (settings) => {\n    const { difficulty, numQuestions, category } = settings;\n    const customUrl = setUrl(url, numQuestions, category, difficulty);\n    console.log(customUrl);\n    return axios.get(customUrl).then(res => res.data.results);\n}\n\nconst getCategories = () => axios.get(categoriesUrl).then(res => res.data.trivia_categories)\n\nexport default { getRandomQuestions, getCategories };","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport QuestionDisplay from './components/QuestionDisplay';\nimport WelcomeDisplay from './components/WelcomeDisplay';\nimport CompletedDisplay from './components/CompletedDisplay';\nimport axiosServices from './services/opentdb';\n\n// index-0 skipped to use 1-based indexing\nconst INITIAL_ANSWERS = (numQuestions) => new Uint8Array(numQuestions + 2);\n\nfunction App() {\n  const [ currNumber, setNumber ] = useState(0); \n  const [ questions, setQuestion ] = useState([]);\n  const [ categories, setCategories ] = useState([]);\n  const [ settings, setQuizSettings ] = useState({difficulty: \"any\", numQuestions: 10, category: -1});\n  const [ answers, setAnswers ] = useState(INITIAL_ANSWERS(settings.numQuestions));\n\n  useEffect(() => {\n    if (currNumber === 0) {\n      axiosServices.getRandomQuestions(settings).then(res => {\n        setQuestion([null].concat(res))\n        setAnswers(INITIAL_ANSWERS(settings.numQuestions));\n        console.log(\"retrieving\"); // it runs even before settings is ready\n      });\n    } else if (currNumber === settings.numQuestions + 1) {\n      setQuestion([]);\n    }\n  }, [currNumber, settings]);\n\n  useEffect(() => \n    axiosServices.getCategories().then(res => setCategories(res))\n  , [])\n\n  console.log(\"answer is \", answers);\n\n  console.log(questions[0]);\n  console.log(`Currently on question number ${currNumber}`);\n\n  const difficultyHandler = event => {\n    setQuizSettings({...settings, difficulty: event.target.value});\n  }\n\n  // for number of questions AND category\n  const settingsHandler = event => {\n    const label = event.target.name;\n    let updatedSettings;\n    if (label === \"numQuestions\") {\n      updatedSettings = {...settings, numQuestions: event.target.value};\n    } else if (label === \"category\") {\n      updatedSettings = {...settings, category: event.target.value};\n    }\n    setQuizSettings(updatedSettings);\n  }\n\n  const clickHandler = event => {\n    event.preventDefault();\n    let updatedAnswers = [...answers];\n    updatedAnswers[currNumber] = Number(event.currentTarget.value);\n    setAnswers(updatedAnswers);\n    setNumber(questions.length || currNumber ? (currNumber + 1) % answers.length : currNumber);\n  }\n\n  return (\n    <header className=\"App-header\">\n      {(currNumber === 0 && \n        <WelcomeDisplay \n        clickHandler={clickHandler} \n        categories={categories} \n        settingsHandler={settingsHandler}\n        difficultyHandler={difficultyHandler}\n        settings={settings}\n        />\n      )}\n      {/*console.log(\"length of question is \", questions.length)*/}\n      {(currNumber !== settings.numQuestions + 1 && currNumber !== 0 && <div className=\"App\">\n        <QuestionDisplay questionData={questions[currNumber]} clickHandler={clickHandler}/>      \n      </div>)}\n      {(currNumber === settings.numQuestions + 1 &&\n        <CompletedDisplay answers={answers} clickHandler={clickHandler} />\n      )}\n    </header>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}